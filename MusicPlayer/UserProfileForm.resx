<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="userProfilepictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5+MiF/n/vyYjDdC/4D0AAAAASUVORK5CYII=
</value>
  </data>
</root>